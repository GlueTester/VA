# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/rusking/Desktop/notsure.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import time
from dotenv import load_dotenv, set_key
import subprocess, sys
import os
import atexit

envfile = "C:\\temp\\.env"

#if not os.path.exists(envfile):   #create if not exist https://stackoverflow.com/questions/35807605/create-a-file-if-it-doesnt-exist
#    open(".env", "x") close() # creates the file

if not os.path.exists(envfile):
        open(envfile, 'w')
else:
        os.remove(envfile)






class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setWindowOpacity(0.95)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(10, 50, 771, 441))
        self.tabWidget.setAcceptDrops(False)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_Main = QtWidgets.QWidget()
        self.tab_Main.setObjectName("tab_Main")
        self.frame = QtWidgets.QFrame(self.tab_Main)
        self.frame.setGeometry(QtCore.QRect(10, 10, 281, 221))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_hostname_txt = QtWidgets.QLabel(self.frame)
        self.label_hostname_txt.setGeometry(QtCore.QRect(39, 20, 88, 17))
        self.label_hostname_txt.setObjectName("label_hostname_txt")
        self.label_location_txt = QtWidgets.QLabel(self.frame)
        self.label_location_txt.setGeometry(QtCore.QRect(50, 60, 57, 17))
        self.label_location_txt.setObjectName("label_location_txt")
        self.label_status_txt = QtWidgets.QLabel(self.frame)
        self.label_status_txt.setGeometry(QtCore.QRect(60, 40, 43, 17))
        self.label_status_txt.setObjectName("label_status_txt")
        self.label_status = QtWidgets.QLabel(self.frame)
        self.label_status.setGeometry(QtCore.QRect(120, 40, 57, 17))
        self.label_status.setText("")
        self.label_status.setTextFormat(QtCore.Qt.RichText)
        self.label_status.setObjectName("label_status")
        self.label_hostname = QtWidgets.QLabel(self.frame)
        self.label_hostname.setEnabled(True)
        self.label_hostname.setGeometry(QtCore.QRect(100, 20, 75, 20))
        self.label_hostname.setInputMethodHints(QtCore.Qt.ImhNone)
        self.label_hostname.setText("")
        self.label_hostname.setTextFormat(QtCore.Qt.RichText)
        self.label_hostname.setObjectName("label_hostname")
        self.label_location = QtWidgets.QLabel(self.frame)
        self.label_location.setGeometry(QtCore.QRect(120, 60, 57, 17))
        self.label_location.setText("")
        self.label_location.setObjectName("label_location")
        self.tabWidget.addTab(self.tab_Main, "")
        self.tab_Vista = QtWidgets.QWidget()
        self.tab_Vista.setEnabled(False)
        self.tab_Vista.setObjectName("tab_Vista")
        self.text_output_vistawindow = QtWidgets.QTextBrowser(self.tab_Vista)
        self.text_output_vistawindow.setGeometry(QtCore.QRect(380, 10, 381, 271))
        self.text_output_vistawindow.setObjectName("text_output_vistawindow")
        self.tabWidget.addTab(self.tab_Vista, "")
        self.tab_Users = QtWidgets.QWidget()
        self.tab_Users.setEnabled(False)
        self.tab_Users.setObjectName("tab_Users")
        self.tabWidget.addTab(self.tab_Users, "")
        self.detectivetab = QtWidgets.QWidget()
        self.detectivetab.setObjectName("detectivetab")
        self.label_adusername_txt = QtWidgets.QLabel(self.detectivetab)
        self.label_adusername_txt.setGeometry(QtCore.QRect(20, 30, 88, 17))
        self.label_adusername_txt.setObjectName("label_adusername_txt")
        self.label_firstname_txt = QtWidgets.QLabel(self.detectivetab)
        self.label_firstname_txt.setGeometry(QtCore.QRect(40, 50, 70, 17))
        self.label_firstname_txt.setObjectName("label_firstname_txt")
        self.label_lastname_txt = QtWidgets.QLabel(self.detectivetab)
        self.label_lastname_txt.setGeometry(QtCore.QRect(40, 70, 69, 17))
        self.label_lastname_txt.setObjectName("label_lastname_txt")
        self.label_adusername = QtWidgets.QLabel(self.detectivetab)
        self.label_adusername.setGeometry(QtCore.QRect(120, 30, 59, 17))
        self.label_adusername.setText("")
        self.label_adusername.setObjectName("label_adusername")
        self.label_title_txt = QtWidgets.QLabel(self.detectivetab)
        self.label_title_txt.setGeometry(QtCore.QRect(70, 90, 31, 17))
        self.label_title_txt.setObjectName("label_title_txt")
        self.label_firstname = QtWidgets.QLabel(self.detectivetab)
        self.label_firstname.setGeometry(QtCore.QRect(120, 50, 59, 17))
        self.label_firstname.setText("")
        self.label_firstname.setObjectName("label_firstname")
        self.label_lastname = QtWidgets.QLabel(self.detectivetab)
        self.label_lastname.setGeometry(QtCore.QRect(120, 70, 59, 17))
        self.label_lastname.setText("")
        self.label_lastname.setObjectName("label_lastname")
        self.label_title = QtWidgets.QLabel(self.detectivetab)
        self.label_title.setGeometry(QtCore.QRect(120, 90, 59, 17))
        self.label_title.setText("")
        self.label_title.setObjectName("label_title")
        self.tabWidget.addTab(self.detectivetab, "")
        self.label_EENumber_txt = QtWidgets.QLabel(self.centralwidget)
        self.label_EENumber_txt.setGeometry(QtCore.QRect(10, 20, 71, 17))
        self.label_EENumber_txt.setObjectName("label_EENumber_txt")
        self.Button_QuickSearch = QtWidgets.QPushButton(self.centralwidget)
        self.Button_QuickSearch.clicked.connect(self.Quick_Search_clicked)
        self.Button_QuickSearch.setGeometry(QtCore.QRect(210, 17, 90, 25))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Button_QuickSearch.sizePolicy().hasHeightForWidth())
        self.Button_QuickSearch.setSizePolicy(sizePolicy)
        self.Button_QuickSearch.setCheckable(False)
        self.Button_QuickSearch.setObjectName("Button_QuickSearch")
        self.Button_ExtendedSearch = QtWidgets.QPushButton(self.centralwidget)
        self.Button_ExtendedSearch.setGeometry(QtCore.QRect(310, 17, 112, 25))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Button_ExtendedSearch.sizePolicy().hasHeightForWidth())
        self.Button_ExtendedSearch.setSizePolicy(sizePolicy)
        self.Button_ExtendedSearch.setCheckable(False)
        self.Button_ExtendedSearch.setObjectName("Button_ExtendedSearch")
        self.input_EE = QtWidgets.QLineEdit(self.centralwidget)
        self.input_EE.setGeometry(QtCore.QRect(90, 17, 113, 25))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.input_EE.sizePolicy().hasHeightForWidth())
        self.input_EE.setSizePolicy(sizePolicy)
        self.input_EE.setText("109869")
        self.input_EE.setMaxLength(7)
        self.input_EE.setClearButtonEnabled(False)
        self.input_EE.setObjectName("input_EE")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addSeparator()
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.Button_QuickSearch, self.tabWidget)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Reactor"))
        self.tabWidget.setAccessibleName(_translate("MainWindow", "Main"))
        self.tab_Main.setAccessibleName(_translate("MainWindow", "Main"))
        self.label_hostname_txt.setText(_translate("MainWindow", "Host Name:"))
        self.label_location_txt.setText(_translate("MainWindow", "Location:"))
        self.label_status_txt.setText(_translate("MainWindow", "Status:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Main), _translate("MainWindow", "Main"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Vista), _translate("MainWindow", "Vista"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Users), _translate("MainWindow", "Users"))
        self.label_adusername_txt.setText(_translate("MainWindow", "AD Username:"))
        self.label_firstname_txt.setText(_translate("MainWindow", "First Name:"))
        self.label_lastname_txt.setText(_translate("MainWindow", "Last Name:"))
        self.label_title_txt.setText(_translate("MainWindow", "Title:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.detectivetab), _translate("MainWindow", "Detective"))
        self.label_EENumber_txt.setText(_translate("MainWindow", "EE Number"))
        self.Button_QuickSearch.setText(_translate("MainWindow", "Quick Search"))
        self.Button_ExtendedSearch.setText(_translate("MainWindow", "Extended Search"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
    def envcleaner(self):
        if not os.path.exists(envfile):
            open(envfile, 'w')
        else:
            os.remove(envfile)
            open(envfile, 'w')

    def ResolveName(self, EE):# Def in classes / https://stackoverflow.com/questions/5615648/how-can-i-call-a-function-within-a-class
        load_dotenv(envfile)
        power_resolveEE = """
        $Hostname  = "Not filled"
        $envfile = "C:\\temp\.env"
        $SearchType = $env:SearchType
        $ImportedEE = $env:EE
        echo $ImportedEE
        if ( $ImportedEE -eq $null){
            write-host "EE is blank"
            write-host "ENV EE is $env:EE"
            write-host "imported EE is $ImportedEE"
            write-host "runing it agin"
            $ImportedEE = $env:EE
            write-host "EE is blank"
            write-host "ENV EE is $env:EE"
            write-host "imported EE is $ImportedEE"
            exit
        }
        $ImportedEE = "*"+$ImportedEE # This is to add the wild card to the front and not have to quote in the search
        #Sources https://mikefrobbins.com/2018/10/03/use-powershell-to-install-the-remote-server-administration-tools-rsat-on-windows-10-version-1809/    https://stackoverflow.com/questions/28740320/how-do-i-check-if-a-powershell-module-is-installed
        if (Get-Module -ListAvailable -Name activedirectory) {
            Import-Module activedirectory
            If ($SearchType -eq "Quick"){
                $OUSearchScope = "OU=Lexington (LEX),OU=VISN09,DC=v09,DC=med,DC=va,DC=gov"
            }
            Else{
                $OUSearchScope = "OU=Laptops, OU=Lexington (LEX),OU=VISN09,DC=v09,DC=med,DC=va,DC=gov"
                $HostnameSearch_lvl1 = Get-ADComputer -Filter * -SearchBase $OUSearchScope | Where-Object {$_.Name -like $ImportedEE} | Select-Object -ExpandProperty Name #Searches : OU=Laptops,OU=Lexington (LEX),OU=VISN09,DC=v09,DC=med,DC=va,DC=gov
                if (!$HostnameSearch_lvl1) {
                    Write-Host "The EE [$EE] could be found in OU: $OUSearchScope" -foreground Red
                    $HostnameSearch_lvl2 = Get-ADComputer -Filter * -SearchBase $OUSearchScope.Split(",", 2)[1] | Where-Object {$_.Name -like $ImportedEE} | Select-Object -ExpandProperty Name #Searches : OU=Lexington (LEX),OU=VISN09,DC=v09,DC=med,DC=va,DC=gov
                    if (!$HostnameSearch_lvl2) {
                        Write-Host "The EE [$EE] could not be found in OU: " $OUSearchScope.Split(",", 2)[1] " Trying one level higher" -foreground Red
                        $HostnameSearch_lvl3 = Get-ADComputer -Filter * -SearchBase $OUSearchScope.Split(",", 3)[2] | Where-Object {$_.Name -like $ImportedEE} | Select-Object -ExpandProperty Name #Searches : OU=VISN09,DC=v09,DC=med,DC=va,DC=gov
                        			
                        if (!$HostnameSearch_lvl3) {
                            $Hostname = $ImportedEE
                            #$HostnameArray.Add($Hostname) > $null
                            $ADLocationArray.Add("Not Found") > $null
                            Write-Host "The EE [$ImportedEE] could not be located in OU: " $OUSearchScope.Split(",", 3)[2] -foreground Red #NEVER Found
                        }
                        else {
                            $Hostname = $HostnameSearch_lvl3
                            #$HostnameArray.Add($Hostname) > $null
                            $ADLocationArray.Add($OUSearchScope.Split(",", 3)[2]) > $null
                            Write-Host "The EE  [$ImportedEE] resolves to [$Hostname] It was in OU: " $OUSearchScope.Split(",", 3)[2] -foreground Green #Found in OU: OU=VISN09,DC=v09,DC=med,DC=va,DC=gov
                        }
                    }
                    else {
                        $Hostname = $HostnameSearch_lvl2
                        #$HostnameArray.Add($Hostname) > $null
                        $ADLocationArray.Add($OUSearchScope.Split(",", 2)[1]) > $null
                        Write-Host "The EE  [$ImportedEE] resolves to [$Hostname] It was in OU: " $OUSearchScope.Split(",", 2)[1] -foreground Green #Found in OU: OU=Lexington (LEX),OU=VISN09,DC=v09,DC=med,DC=va,DC=gov
                    }
                }       
                else {
                    $Hostname = $HostnameSearch_lvl1
                    #$HostnameArray.Add($Hostname) > $null
                    $ADLocationArray.Add($OUSearchScope) > $null
                    Write-Host "The EE  [$ImportedEE] resolves to [$Hostname]" -foreground Green #Found in : OU=Laptops,OU=Lexington (LEX),OU=VISN09,DC=v09,DC=med,DC=va,DC=gov
                }
              
                #Sources:
                #https://adamtheautomator.com/powershell-parameter/
            }
            $Hostname = Get-ADComputer -Filter * -SearchBase $OUSearchScope | Where-Object {$_.Name -like $ImportedEE} | Select-Object -ExpandProperty Name
        } 
        else{
            Add-Type -AssemblyName PresentationCore,PresentationFramework
            $msgBody1 = "Hey! RSAT tools are NOT installed. What are you trying to pull here? I will install it (about 5-10 mins) But do you also want the full RSAT set (about 20min install)? It give you all RSAT tools and functions. "
            $msgTitle1 = "Do you want full set of tools?"
            $msgButton1 = "YesNo"
            $msgImage1 = "Question"
            $Result1 = [System.Windows.MessageBox]::Show($msgBody1,$msgTitle1,$msgButton1,$msgImage1)
            if ( ($result1).value__ -ne 7){ #-ne means not equal 7 is no 6 is yes
                Write-Host "Good choice, installing full RSAT set"
                Get-WindowsCapability -Name RSAT* -Online | Add-WindowsCapability -Online
            }
            else{
                Write-Host "Ok just install the requiered"
                Get-WindowsCapability -Name Rsat.ActiveDirectory.DS-LDS.* -Online #RSAT: Active Directory Domain Services and Lightweight Directory Services Tools
                Get-WindowsCapability -Name Rsat.CertificateServices.Tools* -Online #RSAT: Active Directory Certificate Services Tools 
                Get-WindowsCapability -Name Rsat.RemoteDesktop.Services.Tools* -Online #RSAT: Remote Desktop Services Tools   
                Get-WindowsCapability -Name Rsat.GroupPolicy.Management.Tools* -Online #RSAT: Group Policy Management Tools 
            }
            Write-Host "Oops, I killed your boot sector! Na, RSAT tools are installed now. Updating your help. Judging from our interaction so far, your gonna need it."
                Update-Help
            Write-Host "Done"
        }
        echo "Hostname = \'$Hostname\'" | out-file -filepath $envfile -append -Encoding ASCII #Thsi writes it to the .env file
        """
        result = subprocess.run(["powershell.exe", "-Command", power_resolveEE]) 
        os.environ.pop(envfile, None)
        load_dotenv(envfile)
        _translate = QtCore.QCoreApplication.translate
        self.label_hostname.setText(os.getenv('Hostname'))
        self.Button_QuickSearch.setText("Quick Search")
    
    def Quick_Search_clicked(self):
        self.envcleaner()
        load_dotenv(envfile)
        _translate = QtCore.QCoreApplication.translate
        self.Button_QuickSearch.setText("Searching")
        EE =(self.input_EE.text())
        SearchType="Quick"
        set_key(dotenv_path="C:\\temp\\.env", key_to_set="EE", value_to_set=EE) 
        set_key(dotenv_path="C:\\temp\\.env", key_to_set="SearchType", value_to_set=SearchType)
        self.ResolveName(EE)
    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
    
   # sys.exit(atexit.register(exit_handler))



